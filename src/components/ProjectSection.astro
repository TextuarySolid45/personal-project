---
import { marked } from "marked";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";

async function getReadMe(name: string) {
  try {
    const response = await fetch(
      "https://raw.githubusercontent.com/TextuarySolid45/" +
        name +
        "/main/README.website.md"
    );
    const markdown = await response.text();
    return marked.parse(markdown);
  } catch (error) {
    console.error(error);
    return null;
  }
}
async function getAllRepos() {
  try {
    const allPublicReposResponse = await fetch(
      "https://api.github.com/users/TextuarySolid45/repos?sort=created&direction=desc"
    );
    const status = allPublicReposResponse.status;
    return status == 200 ? await allPublicReposResponse.json() : null;
  } catch (error) {
    console.error(error);
    return null;
  }
}

const allRepos = await getAllRepos();
console.log(allRepos);
var contentList: string[] = [];
if (allRepos != null) {
  for (var repo of allRepos) {
    const content = await getReadMe(repo.name);
    if (content) {
      console.log(content);
      contentList.push(content);
    } else {
      console.log("null content");
    }
  }
}
---

<section>
  <h1 style="font-size:xx-large ;" data-aos="zoom-in-up">My Public Projects</h1>
  <script>
    import Aos from "aos";

    Aos.init({ duration: 1500 });
  </script>
  <ul>
    {
      contentList.length != 0 ? (
        contentList.map((value, index, array) => {
          return (
            <div
              data-aos="zoom-in-right"
              style="padding-top: 5%;padding-bottom: 5%;"
            >
              <article class="white-text" set:html={value} />
            </div>
          );
        })
      ) : (
        <h1 data-aos="zoom-in-left">Could not load projects ðŸ™ƒ</h1>
      )
    }
  </ul>
</section>

<style>
  h1 {
    margin: 0 auto;
    text-align: center;
  }
  ul {
    list-style-type: none;
    padding: unset;
    padding: 5px;
  }

  ul li time {
    flex: 0 0 130px;
    font-style: italic;
  }
  section {
    padding-top: 100ch;
  }
</style>
